/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Employees;
import Employees.EmployeeSystem;
import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import assets.TextFieldLimit;

/**
 *
 * @author anasm
 */
public class NewAndUpdateMovie extends javax.swing.JDialog {

    /**
     * Creates new form NewAndUpdateShow
     */
    ArrayList<Integer> languagesID;
    private int selectedMovieID = -1;

    public void setSelectedMovieID(int selectedMovieID) {
        this.selectedMovieID = selectedMovieID;
    }
    
    private void loadLanguagesIntoComboBox(){
        final String getLanguagesQuery = "SELECT lang_ID, lang_Name FROM Languages";
        try(        
            Statement selectLanguages = EmployeeSystem.connection.createStatement();
            ResultSet languagesResultSet = selectLanguages.executeQuery(getLanguagesQuery);
            ){
            
            // Store movies' id
            languagesID = new ArrayList<>();
            
            while(languagesResultSet.next()){
                languagesID.add(languagesResultSet.getInt(1));
                languageComboBox.addItem(languagesResultSet.getString(2));
            }    
             
            languageComboBox.setSelectedIndex(-1);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    public NewAndUpdateMovie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
       
        initComponents();
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        languageComboBox = new javax.swing.JComboBox<>();
        actionButton = new javax.swing.JButton();
        runtime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        movieNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        languageLabel = new javax.swing.JLabel();
        runtimeLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ageRatingLabel = new javax.swing.JLabel();
        ageRating = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(21, 122, 255));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("New Movie");
        titleLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(130, 142, 156));
        jLabel3.setText("Language");

        languageComboBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        languageComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        languageComboBox.setFocusable(false);
        languageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageComboBoxActionPerformed(evt);
            }
        });

        actionButton.setBackground(new java.awt.Color(21, 122, 255));
        actionButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        actionButton.setForeground(new java.awt.Color(255, 255, 255));
        actionButton.setText("Add Movie");
        actionButton.setBorder(null);
        actionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actionButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                actionButtonFocusGained(evt);
            }
        });
        actionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actionButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actionButtonMouseExited(evt);
            }
        });
        actionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionButtonActionPerformed(evt);
            }
        });

        runtime.setBackground(new java.awt.Color(246, 247, 249));
        runtime.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        runtime.setForeground(new java.awt.Color(21, 22, 29));
        runtime.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        runtime.setCaretColor(new java.awt.Color(21, 22, 29));
        runtime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                runtimeFocusGained(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(130, 142, 156));
        jLabel7.setText("Runtime(Minutes)");

        movieNameField.setBackground(new java.awt.Color(246, 247, 249));
        movieNameField.setDocument(new TextFieldLimit(100));
        movieNameField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        movieNameField.setForeground(new java.awt.Color(21, 22, 29));
        movieNameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(130, 142, 156));
        jLabel1.setText("Movie Name");

        languageLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        languageLabel.setForeground(new java.awt.Color(255, 35, 71));

        runtimeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        runtimeLabel.setForeground(new java.awt.Color(255, 35, 71));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(130, 142, 156));
        jLabel8.setText("Age Rating (Years)");

        ageRatingLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ageRatingLabel.setForeground(new java.awt.Color(255, 35, 71));

        ageRating.setBackground(new java.awt.Color(246, 247, 249));
        ageRating.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ageRating.setForeground(new java.awt.Color(21, 22, 29));
        ageRating.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        ageRating.setCaretColor(new java.awt.Color(21, 22, 29));
        ageRating.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ageRatingFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(movieNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(runtimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(runtime)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(ageRatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ageRating))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieNameField)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(languageLabel)))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(runtimeLabel))
                .addGap(3, 3, 3)
                .addComponent(runtime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ageRatingLabel))
                .addGap(3, 3, 3)
                .addComponent(ageRating, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(actionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void actionButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actionButtonFocusGained

    }//GEN-LAST:event_actionButtonFocusGained

    private void actionButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseEntered
        actionButton.setBackground(new Color(68, 149, 255));
    }//GEN-LAST:event_actionButtonMouseEntered

    private void actionButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseExited
        actionButton.setBackground(new Color(21, 122, 255));
    }//GEN-LAST:event_actionButtonMouseExited

    private void actionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionButtonActionPerformed
        boolean noEmptyFields = true;
        // Check if there is a selected language
        if(languageComboBox.getSelectedIndex() < 0){
            languageLabel.setText("Please choose a language");
            noEmptyFields = false;
        }

        // Check if the runtime is empty
        if(runtime.getText().isEmpty()){
            runtimeLabel.setText("Please fill this field");
            noEmptyFields = false;
        }
        
        // Check if the age rating is empty
        if(ageRating.getText().isEmpty()){
            ageRatingLabel.setText("Please fill this field");
            noEmptyFields = false;
        }
        
        if(noEmptyFields){
            boolean validRuntime = true;
            int runTime = 0;
            

            // Check if the runtime is a number and positive
            try{
                // Check if it is an integer
                runTime = Integer.parseInt(runtime.getText());
                
                // Check if it is a positive
                if(runTime <= 0){
                    validRuntime = false;
                }
            }catch(NumberFormatException e){
                validRuntime = false;
            }
            
            boolean validAgeRating = true;
            int age = 0;
            
            // Check if the age rating is a number and positive
            try{
                // Check if it is an integer
                age = Integer.parseInt(ageRating.getText());
                
                // Check if it is a positive
                if(age < 0){
                    validAgeRating = false;
                }
            }catch(NumberFormatException e){
                validAgeRating = false;
            }
            
            // Change the label text if the run time is not valid
            if(!validRuntime){
                runtimeLabel.setText("Enter a valid run time");
            }
            
            // Change the label text if the age rating is not valid
            if(!validAgeRating){
                ageRatingLabel.setText("Enter a valid age rating or enter 0");  
            }
            
            if(validRuntime && validAgeRating){

                // Get the ID of the selected language
                int selectedLanguageID = languagesID.get(languageComboBox.getSelectedIndex());

                // SQL Statement: Insert 
                final String INSERT_Movie = "INSERT INTO Movies(Movie_Name, Language, Runtime, Age_Rating) VALUES(?, ?, ?, ?)";

                // SQL Statement: Update 
                final String UPDATE_Movie_QUERY = "UPDATE Movies SET Movie_Name = ?, Language = ?, Runtime = ?, Age_Rating = ? WHERE Movie_ID = " + selectedMovieID;

                // To store the success message depends on the operation (Add or update)
                String successMessage;

                // To store the sql statement that will be executed
                String InsertUpdateQuery;

                // If the operation is update
                if(selectedMovieID > 0){
                    InsertUpdateQuery = UPDATE_Movie_QUERY;
                    successMessage = "Movie #" + selectedMovieID + " Updated Successfully";
                }else{
                    InsertUpdateQuery = INSERT_Movie;
                    successMessage = "Movie added successfully";
                }

                // Insert the new theater
                try(
                    PreparedStatement newMovie = EmployeeSystem.connection.prepareStatement(InsertUpdateQuery);
                ){
                    newMovie.setString(1, movieNameField.getText());
                    newMovie.setInt(2, selectedLanguageID);
                    newMovie.setInt(3, runTime);
                    newMovie.setInt(4, age);

                    // Show success message if the movie is added
                    if(newMovie.executeUpdate() == 1){
                        JOptionPane.showMessageDialog(null, successMessage, "Movie added success", JOptionPane.INFORMATION_MESSAGE);

                        // Clear the form
                        movieNameField.setText("");
                        languageComboBox.setSelectedIndex(-1);
                        runtime.setText("");
                        ageRating.setText("");
                        
                        // Refresh the table of movies
                        MoviesForm.refreshTable();
                        
                        // Dispose the dialog after the update
                        if(selectedMovieID > 0){
                            this.dispose();
                        }
                    }

                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        }
    }//GEN-LAST:event_actionButtonActionPerformed

    private void runtimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_runtimeFocusGained
        runtimeLabel.setText("");
    }//GEN-LAST:event_runtimeFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        // Load the movies and the theater from the database
        loadLanguagesIntoComboBox();

        if(selectedMovieID > 0){
            titleLabel.setText("Update Movie");
            actionButton.setText("Update Movie");

            final String SELECTED_Movie_QUERY = "SELECT Movie_Name, Language, Runtime, Age_Rating FROM Movies WHERE Movie_ID = " + selectedMovieID;
            try(Statement getSelectedMovie = EmployeeSystem.connection.createStatement();
                ResultSet selectedMovieResultSet = getSelectedMovie.executeQuery(SELECTED_Movie_QUERY))
            {
                if(selectedMovieResultSet.next()){
                    movieNameField.setText(selectedMovieResultSet.getString(1));
                    languageComboBox.setSelectedIndex(languagesID.indexOf(selectedMovieResultSet.getInt(2)));
                    runtime.setText(selectedMovieResultSet.getString(3));
                    ageRating.setText(selectedMovieResultSet.getString(4));
                }
 
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void titleLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabelMouseClicked
       
    }//GEN-LAST:event_titleLabelMouseClicked

    private void languageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageComboBoxActionPerformed
        languageLabel.setText("");
    }//GEN-LAST:event_languageComboBoxActionPerformed

    private void ageRatingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageRatingFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ageRatingFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewAndUpdateMovie dialog = new NewAndUpdateMovie(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionButton;
    private javax.swing.JTextField ageRating;
    private javax.swing.JLabel ageRatingLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> languageComboBox;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JTextField movieNameField;
    private javax.swing.JTextField runtime;
    private javax.swing.JLabel runtimeLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
