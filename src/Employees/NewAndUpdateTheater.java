/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Employees;
import Employees.EmployeeSystem;
import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author anasm
 */
public class NewAndUpdateTheater extends javax.swing.JDialog {

    /**
     * Creates new form NewAndUpdateShow
     */
    private int selectedTheaterNumber = -1;
    ArrayList<Integer> typesID;
    private void loadTheaterTypesIntoComboBox(){
        final String getTypesQuery = "SELECT Type_ID, Type_Name FROM Theater_Types";
        try(        
            Statement selectTypes = EmployeeSystem.connection.createStatement();
            ResultSet typesResultSet = selectTypes.executeQuery(getTypesQuery);
            ){
            
            // Store movies' id
            typesID = new ArrayList<>();
            
            while(typesResultSet.next()){
                typesID.add(typesResultSet.getInt(1));
                theaterTypeComboBox.addItem(typesResultSet.getString(2));
            }    
             
            theaterTypeComboBox.setSelectedIndex(-1);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    public void setSelectedTheaterNumber(int selectedTheaterNumber) {
        this.selectedTheaterNumber = selectedTheaterNumber;
    }   
    
    public NewAndUpdateTheater(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
       
        initComponents();
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        theaterTypeComboBox = new javax.swing.JComboBox<>();
        actionButton = new javax.swing.JButton();
        theaterNumberField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        theaterTypeLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        numOfSeatsLabel = new javax.swing.JLabel();
        numOfSeatsField = new javax.swing.JTextField();
        theaterNumberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(21, 122, 255));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("New Theater");
        titleLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(130, 142, 156));
        jLabel3.setText("Theater Type");

        theaterTypeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        theaterTypeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        theaterTypeComboBox.setFocusable(false);
        theaterTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theaterTypeComboBoxActionPerformed(evt);
            }
        });

        actionButton.setBackground(new java.awt.Color(21, 122, 255));
        actionButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        actionButton.setForeground(new java.awt.Color(255, 255, 255));
        actionButton.setText("Add Theater");
        actionButton.setBorder(null);
        actionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actionButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                actionButtonFocusGained(evt);
            }
        });
        actionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actionButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actionButtonMouseExited(evt);
            }
        });
        actionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionButtonActionPerformed(evt);
            }
        });

        theaterNumberField.setBackground(new java.awt.Color(246, 247, 249));
        theaterNumberField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        theaterNumberField.setForeground(new java.awt.Color(21, 22, 29));
        theaterNumberField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        theaterNumberField.setCaretColor(new java.awt.Color(21, 22, 29));
        theaterNumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                theaterNumberFieldFocusGained(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(130, 142, 156));
        jLabel7.setText("Theater Number");

        theaterTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        theaterTypeLabel.setForeground(new java.awt.Color(255, 35, 71));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(130, 142, 156));
        jLabel8.setText("Number of seats");

        numOfSeatsLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numOfSeatsLabel.setForeground(new java.awt.Color(255, 35, 71));

        numOfSeatsField.setBackground(new java.awt.Color(246, 247, 249));
        numOfSeatsField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        numOfSeatsField.setForeground(new java.awt.Color(21, 22, 29));
        numOfSeatsField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        numOfSeatsField.setCaretColor(new java.awt.Color(21, 22, 29));
        numOfSeatsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numOfSeatsFieldFocusGained(evt);
            }
        });

        theaterNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        theaterNumberLabel.setForeground(new java.awt.Color(255, 35, 71));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(theaterNumberField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(theaterNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(theaterTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(theaterTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(numOfSeatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(numOfSeatsField))
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(theaterNumberLabel))
                .addGap(3, 3, 3)
                .addComponent(theaterNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(theaterTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(theaterTypeLabel)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(numOfSeatsLabel))
                .addGap(3, 3, 3)
                .addComponent(numOfSeatsField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(actionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void actionButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actionButtonFocusGained

    }//GEN-LAST:event_actionButtonFocusGained

    private void actionButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseEntered
        actionButton.setBackground(new Color(68, 149, 255));
    }//GEN-LAST:event_actionButtonMouseEntered

    private void actionButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseExited
        actionButton.setBackground(new Color(21, 122, 255));
    }//GEN-LAST:event_actionButtonMouseExited

    private void actionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionButtonActionPerformed
        boolean noEmptyFields = true;
        
        // Check if the theater number is empty
        if(theaterNumberField.getText().isEmpty()){
            theaterNumberLabel.setText("Please fill this field");
            noEmptyFields = false;
        }

        // Check if there is a selected type
        if(theaterTypeComboBox.getSelectedIndex() < 0){
            theaterTypeLabel.setText("Please choose a type");
            noEmptyFields = false;
        }

        // Check if the number of seats is empty
        if(numOfSeatsField.getText().isEmpty()){
            numOfSeatsLabel.setText("Please fill this field");
            noEmptyFields = false;
        }
        
        if(noEmptyFields){
            boolean validTheaterNumber = true;
            int theaterNumber = 0;
            
            // Check if the theater number is a number and positive
            try{
                // Check if it is an integer
                theaterNumber = Integer.parseInt(theaterNumberField.getText());
                
                // Check if it is a positive
                if(theaterNumber <= 0){
                    validTheaterNumber = false;
                }
            }catch(NumberFormatException e){
                validTheaterNumber = false;
            }
            
            boolean validNumOfSeats = true;
            int numOfSeats = 0;
            
            // Check if the number of seats is a number and positive
            try{
                // Check if it is an integer
                numOfSeats = Integer.parseInt(numOfSeatsField.getText());
                
                // Check if it is a positive
                if(numOfSeats < 0){
                    validNumOfSeats = false;
                }
            }catch(NumberFormatException e){
                validNumOfSeats = false;
            }
            
            // Change the label text if the theater number is not valid
            if(!validTheaterNumber){
                theaterNumberLabel.setText("Enter a valid theater mumber");
            }
            
            // Change the label text if the number of seats is not valid
            if(!validNumOfSeats){
                numOfSeatsLabel.setText("Enter a valid number");  
            }
            
            if(validTheaterNumber && validNumOfSeats){

                // Get the ID of the selected type
                int selectedTheaterType = typesID.get(theaterTypeComboBox.getSelectedIndex());

                // SQL Statement: Insert 
                final String INSERT_THEATER = "INSERT INTO Theaters(Theater_Number, Theater_Type, Number_Of_Seats) VALUES(?, ?, ?)";

                // SQL Statement: Update 
                final String UPDATE_THEATER_QUERY = "UPDATE Theaters SET Theater_Number = ?, Theater_Type = ?, Number_Of_Seats = ? WHERE Theater_Number = " + selectedTheaterNumber;

                // To store the success message depends on the operation (Add or update)
                String successMessage;
                
                // To store the success message title depends on the operation (Add or update)
                String successTitle;

                // To store the sql statement that will be executed
                String InsertUpdateQuery;

                // If the operation is update
                if(selectedTheaterNumber > 0){
                    InsertUpdateQuery = UPDATE_THEATER_QUERY;
                    successTitle = "Update Theater";
                    successMessage = "Theater #" + selectedTheaterNumber + " Updated Successfully";
                }else{
                    InsertUpdateQuery = INSERT_THEATER;
                    successTitle = "Add Theater";
                    successMessage = "Theater added successfully";
                }

                final String THEATERS_NUMBERS_QUERY = "SELECT Theater_Number FROM Theaters WHERE Theater_Number = ?";
                
                // Resultset to get the theater numbers
                ResultSet theaterNumbersResultSet = null;

                // Insert the new Theater
                try(
                    PreparedStatement newOrUpdateTheater = EmployeeSystem.connection.prepareStatement(InsertUpdateQuery);
                    PreparedStatement getTheaterNumbers = EmployeeSystem.connection.prepareStatement(THEATERS_NUMBERS_QUERY);
                        ){
                    
                    // Check if the theater number is already exists
                    getTheaterNumbers.setInt(1, theaterNumber);
                    theaterNumbersResultSet = getTheaterNumbers.executeQuery();
                    
                    // Check if the theater number is already exists
                    boolean isExist = false;
                    if(theaterNumbersResultSet.next()){
                        if(selectedTheaterNumber >= 0){
                            if(!(selectedTheaterNumber == theaterNumbersResultSet.getInt(1))){
                                isExist = true;
                            }
                        }else{
                            isExist = true;
                        }
                    }
                    
                    if(isExist){
                        JOptionPane.showMessageDialog(null, "Theater number is already exists", "Dublicate Theater number", JOptionPane.WARNING_MESSAGE);
                    }else{
                        newOrUpdateTheater.setInt(1, theaterNumber);
                        newOrUpdateTheater.setInt(2, selectedTheaterType);
                        newOrUpdateTheater.setInt(3, numOfSeats);
                    
                        // Show success message if the theater is added
                        if(newOrUpdateTheater.executeUpdate() == 1){
                            JOptionPane.showMessageDialog(null, successMessage, successTitle, JOptionPane.INFORMATION_MESSAGE);
                        }
                        
                        // Clear the form
                        theaterNumberField.setText("");
                        theaterTypeComboBox.setSelectedIndex(-1);
                        numOfSeatsField.setText("");

                        // Refresh the table of theaters
                        TheatersForm.refreshTable();
                        
                        // Dispose the dialog after the update
                        if(selectedTheaterNumber > 0){
                        this.dispose();
                    }
                }

                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                }finally{
                    if(theaterNumbersResultSet != null){
                        try{
                            theaterNumbersResultSet.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_actionButtonActionPerformed

    private void theaterNumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_theaterNumberFieldFocusGained
        theaterNumberLabel.setText("");
    }//GEN-LAST:event_theaterNumberFieldFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        // Load the types of theaters from the database
        loadTheaterTypesIntoComboBox();
        
        if(selectedTheaterNumber > 0){
            titleLabel.setText("Update Theater");
            actionButton.setText("Update Theater");

            final String SELECTED_THEATER_QUERY = "SELECT Theater_Number, Theater_Type, Number_of_Seats FROM Theaters WHERE Theater_Number = " + selectedTheaterNumber;
            try(Statement getSelectedTheater = EmployeeSystem.connection.createStatement();
                ResultSet selectedTheaterResultSet = getSelectedTheater.executeQuery(SELECTED_THEATER_QUERY);)
            {
                if(selectedTheaterResultSet.next()){
                    theaterNumberField.setText(selectedTheaterResultSet.getString(1));
                    theaterTypeComboBox.setSelectedIndex(typesID.indexOf(selectedTheaterResultSet.getInt(2)));
                    numOfSeatsField.setText(selectedTheaterResultSet.getString(3));
                }
 
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void titleLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabelMouseClicked
       
    }//GEN-LAST:event_titleLabelMouseClicked

    private void theaterTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theaterTypeComboBoxActionPerformed
        theaterTypeLabel.setText("");
    }//GEN-LAST:event_theaterTypeComboBoxActionPerformed

    private void numOfSeatsFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numOfSeatsFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_numOfSeatsFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateTheater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateTheater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateTheater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAndUpdateTheater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewAndUpdateTheater dialog = new NewAndUpdateTheater(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField numOfSeatsField;
    private javax.swing.JLabel numOfSeatsLabel;
    private javax.swing.JTextField theaterNumberField;
    private javax.swing.JLabel theaterNumberLabel;
    private javax.swing.JComboBox<String> theaterTypeComboBox;
    private javax.swing.JLabel theaterTypeLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
